GPU available: False, used: False
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
HPU available: False, using: 0 HPUs
Restoring states from the checkpoint path at /Users/huanzhang/01Acdemics/PhD/Modules/DL4AM/solo_piano_detection/experiments/baseline_cnn/2022-04-10_18-28-59/uncategorized/3nwfn4n6/checkpoints/epoch=462-step=44911.ckpt
Loaded model weights from checkpoint at /Users/huanzhang/01Acdemics/PhD/Modules/DL4AM/solo_piano_detection/experiments/baseline_cnn/2022-04-10_18-28-59/uncategorized/3nwfn4n6/checkpoints/epoch=462-step=44911.ckpt
Error executing job with overrides: []
Traceback (most recent call last):
  File "train.py", line 64, in <module>
    main()
  File "/opt/anaconda3/lib/python3.7/site-packages/hydra/main.py", line 52, in decorated_main
    config_name=config_name,
  File "/opt/anaconda3/lib/python3.7/site-packages/hydra/_internal/utils.py", line 378, in _run_hydra
    lambda: hydra.run(
  File "/opt/anaconda3/lib/python3.7/site-packages/hydra/_internal/utils.py", line 214, in run_and_report
    raise ex
  File "/opt/anaconda3/lib/python3.7/site-packages/hydra/_internal/utils.py", line 211, in run_and_report
    return func()
  File "/opt/anaconda3/lib/python3.7/site-packages/hydra/_internal/utils.py", line 381, in <lambda>
    overrides=args.overrides,
  File "/opt/anaconda3/lib/python3.7/site-packages/hydra/_internal/hydra.py", line 111, in run
    _ = ret.return_value
  File "/opt/anaconda3/lib/python3.7/site-packages/hydra/core/utils.py", line 233, in return_value
    raise self._return_value
  File "/opt/anaconda3/lib/python3.7/site-packages/hydra/core/utils.py", line 160, in run_job
    ret.return_value = task_function(task_cfg)
  File "train.py", line 56, in main
    results = trainer.test(model=classifier, dataloaders=spns_test_dl, ckpt_path="/Users/huanzhang/01Acdemics/PhD/Modules/DL4AM/solo_piano_detection/experiments/baseline_cnn/2022-04-10_18-28-59/uncategorized/3nwfn4n6/checkpoints/epoch=462-step=44911.ckpt")
  File "/opt/anaconda3/lib/python3.7/site-packages/pytorch_lightning/trainer/trainer.py", line 939, in test
    return self._call_and_handle_interrupt(self._test_impl, model, dataloaders, ckpt_path, verbose, datamodule)
  File "/opt/anaconda3/lib/python3.7/site-packages/pytorch_lightning/trainer/trainer.py", line 724, in _call_and_handle_interrupt
    return trainer_fn(*args, **kwargs)
  File "/opt/anaconda3/lib/python3.7/site-packages/pytorch_lightning/trainer/trainer.py", line 986, in _test_impl
    results = self._run(model, ckpt_path=self.ckpt_path)
  File "/opt/anaconda3/lib/python3.7/site-packages/pytorch_lightning/trainer/trainer.py", line 1237, in _run
    results = self._run_stage()
  File "/opt/anaconda3/lib/python3.7/site-packages/pytorch_lightning/trainer/trainer.py", line 1321, in _run_stage
    return self._run_evaluate()
  File "/opt/anaconda3/lib/python3.7/site-packages/pytorch_lightning/trainer/trainer.py", line 1366, in _run_evaluate
    eval_loop_results = self._evaluation_loop.run()
  File "/opt/anaconda3/lib/python3.7/site-packages/pytorch_lightning/loops/base.py", line 204, in run
    self.advance(*args, **kwargs)
  File "/opt/anaconda3/lib/python3.7/site-packages/pytorch_lightning/loops/dataloader/evaluation_loop.py", line 153, in advance
    dl_outputs = self.epoch_loop.run(self._data_fetcher, dl_max_batches, kwargs)
  File "/opt/anaconda3/lib/python3.7/site-packages/pytorch_lightning/loops/base.py", line 204, in run
    self.advance(*args, **kwargs)
  File "/opt/anaconda3/lib/python3.7/site-packages/pytorch_lightning/loops/epoch/evaluation_epoch_loop.py", line 127, in advance
    output = self._evaluation_step(**kwargs)
  File "/opt/anaconda3/lib/python3.7/site-packages/pytorch_lightning/loops/epoch/evaluation_epoch_loop.py", line 220, in _evaluation_step
    output = self.trainer._call_strategy_hook("test_step", *kwargs.values())
  File "/opt/anaconda3/lib/python3.7/site-packages/pytorch_lightning/trainer/trainer.py", line 1766, in _call_strategy_hook
    output = fn(*args, **kwargs)
  File "/opt/anaconda3/lib/python3.7/site-packages/pytorch_lightning/strategies/strategy.py", line 352, in test_step
    return self.model.test_step(*args, **kwargs)
  File "model/pl_modules.py", line 63, in test_step
    label_groups = np.split(logits_clips, np.where(np.diff(logits_clips) != 0)+1)
TypeError: can only concatenate tuple (not "int") to tuple
Traceback (most recent call last):
  File "train.py", line 64, in <module>
    main()
  File "/opt/anaconda3/lib/python3.7/site-packages/hydra/main.py", line 52, in decorated_main
    config_name=config_name,
  File "/opt/anaconda3/lib/python3.7/site-packages/hydra/_internal/utils.py", line 378, in _run_hydra
    lambda: hydra.run(
  File "/opt/anaconda3/lib/python3.7/site-packages/hydra/_internal/utils.py", line 214, in run_and_report
    raise ex
  File "/opt/anaconda3/lib/python3.7/site-packages/hydra/_internal/utils.py", line 211, in run_and_report
    return func()
  File "/opt/anaconda3/lib/python3.7/site-packages/hydra/_internal/utils.py", line 381, in <lambda>
    overrides=args.overrides,
  File "/opt/anaconda3/lib/python3.7/site-packages/hydra/_internal/hydra.py", line 111, in run
    _ = ret.return_value
  File "/opt/anaconda3/lib/python3.7/site-packages/hydra/core/utils.py", line 233, in return_value
    raise self._return_value
  File "/opt/anaconda3/lib/python3.7/site-packages/hydra/core/utils.py", line 160, in run_job
    ret.return_value = task_function(task_cfg)
  File "train.py", line 56, in main
    results = trainer.test(model=classifier, dataloaders=spns_test_dl, ckpt_path="/Users/huanzhang/01Acdemics/PhD/Modules/DL4AM/solo_piano_detection/experiments/baseline_cnn/2022-04-10_18-28-59/uncategorized/3nwfn4n6/checkpoints/epoch=462-step=44911.ckpt")
  File "/opt/anaconda3/lib/python3.7/site-packages/pytorch_lightning/trainer/trainer.py", line 939, in test
    return self._call_and_handle_interrupt(self._test_impl, model, dataloaders, ckpt_path, verbose, datamodule)
  File "/opt/anaconda3/lib/python3.7/site-packages/pytorch_lightning/trainer/trainer.py", line 724, in _call_and_handle_interrupt
    return trainer_fn(*args, **kwargs)
  File "/opt/anaconda3/lib/python3.7/site-packages/pytorch_lightning/trainer/trainer.py", line 986, in _test_impl
    results = self._run(model, ckpt_path=self.ckpt_path)
  File "/opt/anaconda3/lib/python3.7/site-packages/pytorch_lightning/trainer/trainer.py", line 1237, in _run
    results = self._run_stage()
  File "/opt/anaconda3/lib/python3.7/site-packages/pytorch_lightning/trainer/trainer.py", line 1321, in _run_stage
    return self._run_evaluate()
  File "/opt/anaconda3/lib/python3.7/site-packages/pytorch_lightning/trainer/trainer.py", line 1366, in _run_evaluate
    eval_loop_results = self._evaluation_loop.run()
  File "/opt/anaconda3/lib/python3.7/site-packages/pytorch_lightning/loops/base.py", line 204, in run
    self.advance(*args, **kwargs)
  File "/opt/anaconda3/lib/python3.7/site-packages/pytorch_lightning/loops/dataloader/evaluation_loop.py", line 153, in advance
    dl_outputs = self.epoch_loop.run(self._data_fetcher, dl_max_batches, kwargs)
  File "/opt/anaconda3/lib/python3.7/site-packages/pytorch_lightning/loops/base.py", line 204, in run
    self.advance(*args, **kwargs)
  File "/opt/anaconda3/lib/python3.7/site-packages/pytorch_lightning/loops/epoch/evaluation_epoch_loop.py", line 127, in advance
    output = self._evaluation_step(**kwargs)
  File "/opt/anaconda3/lib/python3.7/site-packages/pytorch_lightning/loops/epoch/evaluation_epoch_loop.py", line 220, in _evaluation_step
    output = self.trainer._call_strategy_hook("test_step", *kwargs.values())
  File "/opt/anaconda3/lib/python3.7/site-packages/pytorch_lightning/trainer/trainer.py", line 1766, in _call_strategy_hook
    output = fn(*args, **kwargs)
  File "/opt/anaconda3/lib/python3.7/site-packages/pytorch_lightning/strategies/strategy.py", line 352, in test_step
    return self.model.test_step(*args, **kwargs)
  File "model/pl_modules.py", line 63, in test_step
    label_groups = np.split(logits_clips, np.where(np.diff(logits_clips) != 0)+1)
TypeError: can only concatenate tuple (not "int") to tuple
[2022-04-11 23:03:03,747][torch.distributed.nn.jit.instantiator][INFO] - Created a temporary directory at /var/folders/41/_6lykj0s4ss209xm9mwxyb8c0000gn/T/tmpbqkac8ff
[2022-04-11 23:03:03,748][torch.distributed.nn.jit.instantiator][INFO] - Writing /var/folders/41/_6lykj0s4ss209xm9mwxyb8c0000gn/T/tmpbqkac8ff/_remote_module_non_sriptable.py
Testing DataLoader 0:   0%|                                                                                                                                | 0/10 [00:00<?, ?it/s]Traceback [1m(most recent call last)[22m:
  File "train.py", line 64, in <module>
    main()
  File "/opt/anaconda3/lib/python3.7/site-packages/hydra/main.py", line 52, in decorated_main
    config_name=config_name,
  File "/opt/anaconda3/lib/python3.7/site-packages/hydra/_internal/utils.py", line 378, in _run_hydra
    lambda: hydra.run(
  File "/opt/anaconda3/lib/python3.7/site-packages/hydra/_internal/utils.py", line 214, in run_and_report
    raise ex
  File "/opt/anaconda3/lib/python3.7/site-packages/hydra/_internal/utils.py", line 211, in run_and_report
    return func()
  File "/opt/anaconda3/lib/python3.7/site-packages/hydra/_internal/utils.py", line 381, in <lambda>
    overrides=args.overrides,
  File "/opt/anaconda3/lib/python3.7/site-packages/hydra/_internal/hydra.py", line 111, in run
    _ = ret.return_value
  File "/opt/anaconda3/lib/python3.7/site-packages/hydra/core/utils.py", line 233, in return_value
    raise self._return_value
  File "/opt/anaconda3/lib/python3.7/site-packages/hydra/core/utils.py", line 160, in run_job
    ret.return_value = task_function(task_cfg)
  File "train.py", line 56, in main
    results = trainer.test(model=classifier, dataloaders=spns_test_dl, ckpt_path="/Users/huanzhang/01Acdemics/PhD/Modules/DL4AM/solo_piano_detection/experiments/baseline_cnn/2022-04-10_18-28-59/uncategorized/3nwfn4n6/checkpoints/epoch=462-step=44911.ckpt")
  File "/opt/anaconda3/lib/python3.7/site-packages/pytorch_lightning/trainer/trainer.py", line 939, in test
    return self._call_and_handle_interrupt(self._test_impl, model, dataloaders, ckpt_path, verbose, datamodule)
  File "/opt/anaconda3/lib/python3.7/site-packages/pytorch_lightning/trainer/trainer.py", line 724, in _call_and_handle_interrupt
    return trainer_fn(*args, **kwargs)
  File "/opt/anaconda3/lib/python3.7/site-packages/pytorch_lightning/trainer/trainer.py", line 986, in _test_impl
    results = self._run(model, ckpt_path=self.ckpt_path)
  File "/opt/anaconda3/lib/python3.7/site-packages/pytorch_lightning/trainer/trainer.py", line 1237, in _run
    results = self._run_stage()
  File "/opt/anaconda3/lib/python3.7/site-packages/pytorch_lightning/trainer/trainer.py", line 1321, in _run_stage
    return self._run_evaluate()
  File "/opt/anaconda3/lib/python3.7/site-packages/pytorch_lightning/trainer/trainer.py", line 1366, in _run_evaluate
    eval_loop_results = self._evaluation_loop.run()
  File "/opt/anaconda3/lib/python3.7/site-packages/pytorch_lightning/loops/base.py", line 204, in run
    self.advance(*args, **kwargs)
  File "/opt/anaconda3/lib/python3.7/site-packages/pytorch_lightning/loops/dataloader/evaluation_loop.py", line 153, in advance
    dl_outputs = self.epoch_loop.run(self._data_fetcher, dl_max_batches, kwargs)
  File "/opt/anaconda3/lib/python3.7/site-packages/pytorch_lightning/loops/base.py", line 204, in run
    self.advance(*args, **kwargs)
  File "/opt/anaconda3/lib/python3.7/site-packages/pytorch_lightning/loops/epoch/evaluation_epoch_loop.py", line 127, in advance
    output = self._evaluation_step(**kwargs)
  File "/opt/anaconda3/lib/python3.7/site-packages/pytorch_lightning/loops/epoch/evaluation_epoch_loop.py", line 220, in _evaluation_step
    output = self.trainer._call_strategy_hook("test_step", *kwargs.values())
  File "/opt/anaconda3/lib/python3.7/site-packages/pytorch_lightning/trainer/trainer.py", line 1766, in _call_strategy_hook
    output = fn(*args, **kwargs)
  File "/opt/anaconda3/lib/python3.7/site-packages/pytorch_lightning/strategies/strategy.py", line 352, in test_step
    return self.model.test_step(*args, **kwargs)
[1m  File "model/pl_modules.py", line 63, in test_step
[1m    label_groups = np.split(logits_clips, np.where(np.diff(logits_clips) != 0)+1)
[1mTypeError:[22m can only concatenate tuple (not "int") to tuple
> /Users/huanzhang/01Acdemics/PhD/Modules/DL4AM/solo_piano_detection/model/pl_modules.py(63)test_step()
     61
     62         predictions = logits_clips.max(axis=1)
---> 63         label_groups = np.split(logits_clips, np.where(np.diff(logits_clips) != 0)+1)
     64         hook()
     65
torch.return_types.max(
values=tensor([0.9791, 0.9940, 0.9861, 0.9955, 0.9855, 0.9982, 0.9995, 0.9986, 1.0000,
        0.9979, 0.9980, 0.9966, 0.9907, 0.9873, 0.9979, 0.9987, 0.9986, 0.9984,
        0.9976, 0.9946, 0.9860, 0.9971, 0.9962, 0.9984, 0.9978, 0.9374, 0.9972,
        0.9940, 0.9951, 0.9968, 0.9928, 0.9778, 0.8689, 0.9291, 0.9975, 0.8852,
        0.9967, 0.8512, 0.9935, 0.9897, 0.9875, 0.9889, 0.9843, 0.9882, 0.9841,
        0.9996, 0.9983, 0.9860, 0.9946, 0.9825, 0.9787, 0.9846, 0.9802, 0.9881,
        0.9801, 0.9915, 0.9877, 0.9991, 0.9853, 0.9870, 0.9706, 0.9793, 0.9830,
        0.9939, 0.9806, 0.9904, 0.9862, 0.9979, 0.9998, 0.9996, 0.9972, 0.9832,
        0.9810, 0.9988, 0.9956, 0.9331, 0.9971, 0.9987, 0.9821, 0.9875, 0.9969,
        0.9929, 0.9800, 0.9954, 0.9505, 0.9739, 0.9988, 0.9995, 0.9996, 0.9990,
        0.9949, 0.9983, 0.9976, 0.9896, 0.9903, 0.9956, 0.9938, 0.8431, 0.9876,
        0.9969, 1.0000, 0.9870, 0.9903, 0.8041, 0.9876, 0.9899, 0.9449, 0.9942,
        0.9965, 0.9986, 0.9993, 0.9998, 0.9989, 0.9612, 0.9975, 0.9976, 0.9988,
        0.9975, 0.9980, 0.9990, 1.0000, 0.9157, 0.7660, 0.9946, 0.9978, 0.9614,
        0.9992, 0.9975, 0.9958, 0.9968, 0.9994, 0.9989, 0.9970, 0.9977, 0.9965,
        0.9980, 0.9981, 0.9984, 1.0000, 0.9333, 0.9958, 0.9976, 0.9982, 0.9954,
        0.9862, 0.9962, 0.9950, 0.9815, 0.9900, 0.9943, 0.9974, 0.9933, 0.9971,
        0.9960, 0.9957, 0.9931, 0.9926, 0.9973, 0.9959, 0.9967, 0.9801, 1.0000,
        0.9927, 0.9917, 0.9965, 0.9931, 0.9857, 0.9977, 0.9878, 0.9798, 0.9837,
        0.9954, 0.9819, 0.9966, 0.9987, 0.9986, 0.9976, 0.9974, 0.9995, 0.9998,
        0.8778, 0.9998, 0.9980, 0.9986, 0.9909, 0.9933, 0.9844, 0.9938, 0.9831,
        0.9977, 0.9987, 0.9998, 0.9968, 0.9979, 0.9945, 0.9976, 0.9888, 0.9861,
        0.9994, 0.9991, 0.9972, 0.9985, 0.9810, 0.9937, 0.9873, 0.9883, 0.9996,
        0.9969, 0.9964, 0.9906, 0.9976, 0.9971, 0.9990, 0.9995, 0.9954, 0.9974,
        0.9725, 0.9813, 0.9902, 0.9987, 0.9956, 0.9967, 0.9065, 0.9987, 0.9897,
        0.9865, 0.9840, 0.9834, 0.9972, 0.9970, 0.9835, 0.9931, 0.9823, 0.9790,
        0.9804, 0.9785, 0.9786, 0.9784, 0.9799, 0.9828, 0.9799, 0.9919, 0.9885,
        0.9784, 0.9798, 0.9854, 0.9800, 0.9895, 0.9870, 0.9792, 0.9783, 0.9792,
        0.9798, 0.9814, 0.9875, 0.9919, 0.9907, 0.9918, 0.9876, 0.9892, 0.9868,
        0.9822, 0.9993, 0.9244, 0.9815, 0.9826, 0.9795, 0.9805, 0.9790, 0.9785,
        0.9789, 0.9783, 0.9783, 0.9784, 0.9793, 0.9784, 0.9784]),
indices=tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))
*** AttributeError: 'torch.return_types.max' object has no attribute 'shape'
torch.return_types.max(
values=tensor([1.0000, 0.9987]),
indices=tensor([161,  15]))
torch.return_types.max(
values=tensor([0.9791, 0.9940, 0.9861, 0.9955, 0.9855, 0.9982, 0.9995, 0.9986, 1.0000,
        0.9979, 0.9980, 0.9966, 0.9907, 0.9873, 0.9979, 0.9987, 0.9986, 0.9984,
        0.9976, 0.9946, 0.9860, 0.9971, 0.9962, 0.9984, 0.9978, 0.9374, 0.9972,
        0.9940, 0.9951, 0.9968, 0.9928, 0.9778, 0.8689, 0.9291, 0.9975, 0.8852,
        0.9967, 0.8512, 0.9935, 0.9897, 0.9875, 0.9889, 0.9843, 0.9882, 0.9841,
        0.9996, 0.9983, 0.9860, 0.9946, 0.9825, 0.9787, 0.9846, 0.9802, 0.9881,
        0.9801, 0.9915, 0.9877, 0.9991, 0.9853, 0.9870, 0.9706, 0.9793, 0.9830,
        0.9939, 0.9806, 0.9904, 0.9862, 0.9979, 0.9998, 0.9996, 0.9972, 0.9832,
        0.9810, 0.9988, 0.9956, 0.9331, 0.9971, 0.9987, 0.9821, 0.9875, 0.9969,
        0.9929, 0.9800, 0.9954, 0.9505, 0.9739, 0.9988, 0.9995, 0.9996, 0.9990,
        0.9949, 0.9983, 0.9976, 0.9896, 0.9903, 0.9956, 0.9938, 0.8431, 0.9876,
        0.9969, 1.0000, 0.9870, 0.9903, 0.8041, 0.9876, 0.9899, 0.9449, 0.9942,
        0.9965, 0.9986, 0.9993, 0.9998, 0.9989, 0.9612, 0.9975, 0.9976, 0.9988,
        0.9975, 0.9980, 0.9990, 1.0000, 0.9157, 0.7660, 0.9946, 0.9978, 0.9614,
        0.9992, 0.9975, 0.9958, 0.9968, 0.9994, 0.9989, 0.9970, 0.9977, 0.9965,
        0.9980, 0.9981, 0.9984, 1.0000, 0.9333, 0.9958, 0.9976, 0.9982, 0.9954,
        0.9862, 0.9962, 0.9950, 0.9815, 0.9900, 0.9943, 0.9974, 0.9933, 0.9971,
        0.9960, 0.9957, 0.9931, 0.9926, 0.9973, 0.9959, 0.9967, 0.9801, 1.0000,
        0.9927, 0.9917, 0.9965, 0.9931, 0.9857, 0.9977, 0.9878, 0.9798, 0.9837,
        0.9954, 0.9819, 0.9966, 0.9987, 0.9986, 0.9976, 0.9974, 0.9995, 0.9998,
        0.8778, 0.9998, 0.9980, 0.9986, 0.9909, 0.9933, 0.9844, 0.9938, 0.9831,
        0.9977, 0.9987, 0.9998, 0.9968, 0.9979, 0.9945, 0.9976, 0.9888, 0.9861,
        0.9994, 0.9991, 0.9972, 0.9985, 0.9810, 0.9937, 0.9873, 0.9883, 0.9996,
        0.9969, 0.9964, 0.9906, 0.9976, 0.9971, 0.9990, 0.9995, 0.9954, 0.9974,
        0.9725, 0.9813, 0.9902, 0.9987, 0.9956, 0.9967, 0.9065, 0.9987, 0.9897,
        0.9865, 0.9840, 0.9834, 0.9972, 0.9970, 0.9835, 0.9931, 0.9823, 0.9790,
        0.9804, 0.9785, 0.9786, 0.9784, 0.9799, 0.9828, 0.9799, 0.9919, 0.9885,
        0.9784, 0.9798, 0.9854, 0.9800, 0.9895, 0.9870, 0.9792, 0.9783, 0.9792,
        0.9798, 0.9814, 0.9875, 0.9919, 0.9907, 0.9918, 0.9876, 0.9892, 0.9868,
        0.9822, 0.9993, 0.9244, 0.9815, 0.9826, 0.9795, 0.9805, 0.9790, 0.9785,
        0.9789, 0.9783, 0.9783, 0.9784, 0.9793, 0.9784, 0.9784]),
indices=tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))
*** AttributeError: 'torch.return_types.max' object has no attribute 'shape'
*** AttributeError: 'torch.return_types.max' object has no attribute 'items'
*** AttributeError: 'torch.return_types.max' object has no attribute 'item'
tensor([0.9791, 0.9940, 0.9861, 0.9955, 0.9855, 0.9982, 0.9995, 0.9986, 1.0000,
        0.9979, 0.9980, 0.9966, 0.9907, 0.9873, 0.9979, 0.9987, 0.9986, 0.9984,
        0.9976, 0.9946, 0.9860, 0.9971, 0.9962, 0.9984, 0.9978, 0.9374, 0.9972,
        0.9940, 0.9951, 0.9968, 0.9928, 0.9778, 0.8689, 0.9291, 0.9975, 0.8852,
        0.9967, 0.8512, 0.9935, 0.9897, 0.9875, 0.9889, 0.9843, 0.9882, 0.9841,
        0.9996, 0.9983, 0.9860, 0.9946, 0.9825, 0.9787, 0.9846, 0.9802, 0.9881,
        0.9801, 0.9915, 0.9877, 0.9991, 0.9853, 0.9870, 0.9706, 0.9793, 0.9830,
        0.9939, 0.9806, 0.9904, 0.9862, 0.9979, 0.9998, 0.9996, 0.9972, 0.9832,
        0.9810, 0.9988, 0.9956, 0.9331, 0.9971, 0.9987, 0.9821, 0.9875, 0.9969,
        0.9929, 0.9800, 0.9954, 0.9505, 0.9739, 0.9988, 0.9995, 0.9996, 0.9990,
        0.9949, 0.9983, 0.9976, 0.9896, 0.9903, 0.9956, 0.9938, 0.8431, 0.9876,
        0.9969, 1.0000, 0.9870, 0.9903, 0.8041, 0.9876, 0.9899, 0.9449, 0.9942,
        0.9965, 0.9986, 0.9993, 0.9998, 0.9989, 0.9612, 0.9975, 0.9976, 0.9988,
        0.9975, 0.9980, 0.9990, 1.0000, 0.9157, 0.7660, 0.9946, 0.9978, 0.9614,
        0.9992, 0.9975, 0.9958, 0.9968, 0.9994, 0.9989, 0.9970, 0.9977, 0.9965,
        0.9980, 0.9981, 0.9984, 1.0000, 0.9333, 0.9958, 0.9976, 0.9982, 0.9954,
        0.9862, 0.9962, 0.9950, 0.9815, 0.9900, 0.9943, 0.9974, 0.9933, 0.9971,
        0.9960, 0.9957, 0.9931, 0.9926, 0.9973, 0.9959, 0.9967, 0.9801, 1.0000,
        0.9927, 0.9917, 0.9965, 0.9931, 0.9857, 0.9977, 0.9878, 0.9798, 0.9837,
        0.9954, 0.9819, 0.9966, 0.9987, 0.9986, 0.9976, 0.9974, 0.9995, 0.9998,
        0.8778, 0.9998, 0.9980, 0.9986, 0.9909, 0.9933, 0.9844, 0.9938, 0.9831,
        0.9977, 0.9987, 0.9998, 0.9968, 0.9979, 0.9945, 0.9976, 0.9888, 0.9861,
        0.9994, 0.9991, 0.9972, 0.9985, 0.9810, 0.9937, 0.9873, 0.9883, 0.9996,
        0.9969, 0.9964, 0.9906, 0.9976, 0.9971, 0.9990, 0.9995, 0.9954, 0.9974,
        0.9725, 0.9813, 0.9902, 0.9987, 0.9956, 0.9967, 0.9065, 0.9987, 0.9897,
        0.9865, 0.9840, 0.9834, 0.9972, 0.9970, 0.9835, 0.9931, 0.9823, 0.9790,
        0.9804, 0.9785, 0.9786, 0.9784, 0.9799, 0.9828, 0.9799, 0.9919, 0.9885,
        0.9784, 0.9798, 0.9854, 0.9800, 0.9895, 0.9870, 0.9792, 0.9783, 0.9792,
        0.9798, 0.9814, 0.9875, 0.9919, 0.9907, 0.9918, 0.9876, 0.9892, 0.9868,
        0.9822, 0.9993, 0.9244, 0.9815, 0.9826, 0.9795, 0.9805, 0.9790, 0.9785,
        0.9789, 0.9783, 0.9783, 0.9784, 0.9793, 0.9784, 0.9784])
('Robert Schumann, Alfred Brendel, Wiener Philharmoniker, Sir Simon Rattle - Piano Concerto in A Minor, Op. 54 -  II. Intermezzo. Andantino grazioso - Live.wav',)
tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
*** TypeError: can only concatenate tuple (not "int") to tuple
*** TypeError: can only concatenate tuple (not "int") to tuple
*** TypeError: only integer scalar arrays can be converted to a scalar index
array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1, -1,  0,
        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
        0,  0,  1, -1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
        0,  0,  0,  0,  0,  0,  1, -1,  0,  0,  0,  0,  0,  0,  0,  0,  0,
        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1, -1,  0,  0,  0,  0,
        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
        0,  1, -1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
        0,  0,  0,  0])
(array([ 14,  15,  36,  37,  74,  75,  96,  97, 120, 121]),)
[tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([1]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([1]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([1]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([1]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([1]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])]
11
('Robert Schumann, Alfred Brendel, Wiener Philharmoniker, Sir Simon Rattle - Piano Concerto in A Minor, Op. 54 -  II. Intermezzo. Andantino grazioso - Live.wav',)
<built-in method size of Tensor object at 0x7fa45757e8f0>
torch.Size([277])
